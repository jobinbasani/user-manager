/*
 * User Manager API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// BadRequestError - The specified content was not found.
type BadRequestError struct {
	Message string `json:"message"`

	Code int32 `json:"code"`

	Errors []InternalServerErrorErrors `json:"errors,omitempty"`
}

// AssertBadRequestErrorRequired checks if the required fields are not zero-ed
func AssertBadRequestErrorRequired(obj BadRequestError) error {
	elements := map[string]interface{}{
		"message": obj.Message,
		"code":    obj.Code,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Errors {
		if err := AssertInternalServerErrorErrorsRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseBadRequestErrorRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of BadRequestError (e.g. [][]BadRequestError), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBadRequestErrorRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBadRequestError, ok := obj.(BadRequestError)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBadRequestErrorRequired(aBadRequestError)
	})
}
