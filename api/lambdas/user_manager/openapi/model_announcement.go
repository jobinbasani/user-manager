/*
 * User Manager API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Announcement struct {

	// Announcement ID
	Id string `json:"id"`

	// Announcement title
	Title string `json:"title"`

	// Announcement subtitle
	Subtitle string `json:"subtitle,omitempty"`

	// Announcement details
	Description string `json:"description"`

	// Day on which this announcement expires
	ExpiresOn string `json:"expiresOn,omitempty"`
}

// AssertAnnouncementRequired checks if the required fields are not zero-ed
func AssertAnnouncementRequired(obj Announcement) error {
	elements := map[string]interface{}{
		"id":          obj.Id,
		"title":       obj.Title,
		"description": obj.Description,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseAnnouncementRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Announcement (e.g. [][]Announcement), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAnnouncementRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAnnouncement, ok := obj.(Announcement)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAnnouncementRequired(aAnnouncement)
	})
}
