name: Update Web App

on:
  push:
    paths:
      - 'ui/user-manager/**'
  pull_request:
    branches: [ main ]

env:
  AWS_REGION : "ca-central-1"

defaults:
  run:
    working-directory: ./ui/user-manager
  
permissions:
      id-token: write
      contents: read    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.13.0'
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.USER_MANAGER_AWS_DEPLOY_ROLE_ARN }}
        role-session-name: githubdeploysession
        aws-region: ${{ env.AWS_REGION }}
    - name: Update sign in url
      run: |
        branchName=${GITHUB_REF##*/}
        callbackUrlPath=$(aws cloudformation describe-stacks --stack-name ${{ secrets.USER_MANAGER_AWS_STACK_NAME }} --query "Stacks[0].Outputs[?OutputKey=='CallbackUrlPath'].OutputValue" | jq -r '.[0]')
        partialSignInUrl=$(aws cloudformation describe-stacks --stack-name ${{ secrets.USER_MANAGER_AWS_STACK_NAME }} --query "Stacks[0].Outputs[?OutputKey=='CognitoSignInURL'].OutputValue" | jq -r '.[0]')
        cdnUrl=$(aws cloudformation describe-stacks --stack-name ${{ secrets.USER_MANAGER_AWS_STACK_NAME }} --query "Stacks[0].Outputs[?OutputKey=='CdnUrl'].OutputValue" | jq -r '.[0]')
        callbackUrl=$(echo "${cdnUrl}${branchName}${callbackUrlPath}" | jq -rR @uri)
        completeSignInUrl="${partialSignInUrl}${callbackUrl}"
        sed -i "s/LOGIN_URL.*=.*[\"].*[\"];/LOGIN_URL = \"$completeSignInUrl\";/g" src/constants/ApiConstants.ts
    - name: Build app
      run: |
        npm ci
        npm run build --if-present
    - name: update app
      run: |
        s3bucket=$(aws cloudformation describe-stacks --stack-name ${{ secrets.USER_MANAGER_AWS_STACK_NAME }} --query "Stacks[0].Outputs[?OutputKey=='WebAppBucketName'].OutputValue" | jq -r '.[0]')
        cdnId=$(aws cloudformation describe-stacks --stack-name ${{ secrets.USER_MANAGER_AWS_STACK_NAME }} --query "Stacks[0].Outputs[?OutputKey=='CdnId'].OutputValue" | jq -r '.[0]')
        branchName=${GITHUB_REF##*/}
        aws s3 cp build s3://${s3bucket}/${branchName}/ --recursive --quiet
        aws cloudfront create-invalidation --distribution-id ${cdnId} --paths "/${branchName}/*"


